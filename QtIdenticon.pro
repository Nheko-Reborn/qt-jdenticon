######################################################################
# Automatically generated by qmake (3.1) Wed Jan 23 02:47:03 2019
######################################################################

TEMPLATE = lib
CONFIG   += plugin c++11
TARGET = qtjdenticon
TARGET = $$qtLibraryTarget($$TARGET)
uri = im.nheko.qtjdenticon

INCLUDEPATH = includes
INCLUDEPATH += .
DESTDIR  = plugins

# The following define makes your compiler warn you if you use any
# feature of Qt which has been marked as deprecated (the exact warnings
# depend on your compiler). Please consult the documentation of the
# deprecated API in order to know how to port your code away from it.
DEFINES += QT_DEPRECATED_WARNINGS

CONFIG(debug) {
    DEFINES += QT_NO_DEBUG_OUTPUT
}

# You can also make your code fail to compile if you use deprecated APIs.
# In order to do so, uncomment the following line.
# You can also select to disable deprecated APIs only up to a certain version of Qt.
#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0

# Input
HEADERS += src/identicon.h \
           src/identiconstyle.h \
           src/qtidenticon.h \
           src/qtidenticon_global.h \
           src/rendering/colortheme.h \
           src/rendering/colorutils.h \
           src/rendering/icongenerator.h \
           src/rendering/rectangle.h \
           src/rendering/renderer.h \
           src/rendering/svgpath.h \
           src/rendering/svgrenderer.h \
           src/rendering/transform.h \
           src/shapes/shape.h \
           src/shapes/shapecategory.h \
           src/shapes/shapedefinitions.h \
           src/shapes/shapeposition.h \
    src/jdenticonplugin.h \
    includes/jdenticoninterface.h
SOURCES += src/identicon.cpp \
           src/identiconstyle.cpp \
           src/qtidenticon.cpp \
           src/rendering/colortheme.cpp \
           src/rendering/colorutils.cpp \
           src/rendering/icongenerator.cpp \
           src/rendering/rectangle.cpp \
           src/rendering/svgpath.cpp \
           src/rendering/svgrenderer.cpp \
           src/rendering/transform.cpp \
           src/shapes/shape.cpp \
           src/shapes/shapecategory.cpp \
           src/shapes/shapedefinitions.cpp \
           src/shapes/shapeposition.cpp \
    src/jdenticonplugin.cpp

# install
#target.path = $$[QT_INSTALL_EXAMPLES]/widgets/tools/jdenticon/plugins
#INSTALLS += target

DISTFILES = qmldir

!equals(_PRO_FILE_PWD_, $$OUT_PWD) {
    copy_qmldir.target = $$OUT_PWD/qmldir
    copy_qmldir.depends = $$_PRO_FILE_PWD_/qmldir
    copy_qmldir.commands = $(COPY_FILE) "$$replace(copy_qmldir.depends, /, $$QMAKE_DIR_SEP)" "$$replace(copy_qmldir.target, /, $$QMAKE_DIR_SEP)"
    QMAKE_EXTRA_TARGETS += copy_qmldir
    PRE_TARGETDEPS += $$copy_qmldir.target
}

qmldir.files = qmldir
unix {
    installPath = $$[QT_INSTALL_QML]/$$replace(uri, \., /)
    qmldir.path = $$installPath
    target.path = $$installPath
    INSTALLS += target qmldir
}